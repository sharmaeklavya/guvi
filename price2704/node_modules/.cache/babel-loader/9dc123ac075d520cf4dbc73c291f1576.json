{"ast":null,"code":"var _jsxFileName = \"/Users/eklavyasharma/Documents/GitHub/guvi/sbadmin0505/react-app/src/users/TextField.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextField({\n  label,\n  ...props\n}) {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group col-md-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.name,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form-control ${meta.touched && meta.error && 'is-invalid'}`,\n        ...field,\n        ...props,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: field.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = TextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"sources":["/Users/eklavyasharma/Documents/GitHub/guvi/sbadmin0505/react-app/src/users/TextField.js"],"names":["ErrorMessage","useField","TextField","label","props","field","meta","name","touched","error"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,QAAvB,QAAuC,QAAvC;;;AAEA,eAAe,SAASC,SAAT,CAAoB;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAApB,EAAyC;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAEC,KAAK,CAACE,IAAtB;AAAA,kBAA6BJ;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAG,gBAAeG,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAArB,IAA8B,YAAa,EADxE;AAAA,WAEMJ,KAFN;AAAA,WAEiBD,KAFjB;AAGE,QAAA,YAAY,EAAC;AAHf;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEC,KAAK,CAACE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GAhBuBL,S;UACAD,Q;;;KADAC,S","sourcesContent":["import { ErrorMessage, useField } from \"formik\";\n\nexport default function TextField ({ label, ...props }) {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <div className=\"form-group col-md-4\">\n        <label htmlFor={field.name}>{label}</label>\n        <input          \n          className={`form-control ${meta.touched && meta.error && 'is-invalid'}`}\n          {...field} {...props}\n          autoComplete=\"off\"\n        />\n        <ErrorMessage name={field.name} />\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}